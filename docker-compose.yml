version: '3.7'

# Networks
networks:
    app-network:
      driver: bridge

services:
    # NGINX - Service
    nginx:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true

        ports:
            - "9090:80"

        volumes:
            - ./src:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
          
        depends_on: 
            - php
            - mysql
        networks:
            - app-network
    #DataBase
    mysql:
        image: mysql:5.7.22
        container_name: DataBase
        restart: unless-stopped
        tty: true
        ports: 
            - "3307:3306"
        environment:
            MYSQL_DATABASE: uni
            MYSQL_USER: homestead
            MYSQL_PASSWORD: 123456
            MYSQL_ROOT_PASSWORD: 123456
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes: 
            - ./mysql:/var/lib/mysql
        networks:
            - app-network
    #PHP-FPM - Service
    php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php
        restart: unless-stopped
        tty: true
        working_dir: /var/www/html
        volumes:
            - ./src:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - app-network
    #Php My Admin
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        ports:
            - "8080:80"
        depends_on: 
            - mysql
        environment:
            PMA_HOST: mysql
        networks:
                - app-network
    #Composer
    composer:
        image: composer:latest
        container_name: composer-por
        volumes: 
            - ./src:/var/www/html
        working_dir: /var/www/html
        depends_on: 
            - php
        networks:
            - app-network
   # npm:
    #    image: node:13.7
     #   container_name: npm-por
    #    volumes: 
    #        - ./src:/var/www/html
    #    working_dir: /var/www/html
    #    entrypoint: ['npm']

    #    networks:
    #        - app-network
    artisan:
        build: 
            context: .
            dockerfile: Dockerfile

        container_name: artisan-por
        volumes: 
            - ./src:/var/www/html
        depends_on: 
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - app-network


    
        
                
